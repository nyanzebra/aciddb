Datastore
=========

@startuml
Title: Datastore::initialize

Datastore -> Datastore: createIndex()
@enduml

@startuml
Title: Datastore::createIndex

loop for each Record on Disk
	Datastore -> Disk: readRecordFromSource()
	Disk -> Datastore: return Record
	Datastore -> Index: addRecord()
	Index -> Datastore:
end
@enduml

@startuml
Title: Datastore::getRecord
alt if RecordBody is in Index
	Datastore -> Caller: return RecordBody from Index
else Record is not in Index
	Datastore -> Disk: readRecordFromSource()
	Disk -> Datastore: return Record
	Datastore -> Datastore: associate body with indexed record if it exists
	Datastore -> Caller: return RecordBody if it exists
end
@enduml

@startuml
Title: Datastore::modifyRecord

Datastore -> DRME: process()
DRME -> Datastore: return status
Datastore -> Caller: return status
@enduml

@startuml
Title: Datastore::verify

' TODO: check other things?
Database -> Disk: get actual Datastore size
Disk -> Database: Datastore size
Database -> Database: calculate expected size
alt actual Datastore size equals expected Datastore size
	Database -> Caller: return verification success
else actual Datastore size does not equal expected Datastore size
	Database -> Caller: return verification failure
end
@enduml

@startuml
Title: Datastores::mergeWith

Database -> Database: create set union of all Records in Datastore Indices
Database -> Disk: create new Datastore on disk with incremented version number
Disk -> Database: ok
loop for each Record in union
	alt if Record is not marked as deleted in TOC
		Database -> Disk: serialize Record to new Datastore
		Disk -> Database: ok
	else Record is marked as deleted in TOC
		Database -> Database: ignore Record
	end
end
@enduml

Record Modification Events
--------------------------

@startuml
Title: Datastore: Process Record Modification Event Create

Database -> Database: get new Datastore Object Id (DOI)
Database -> Database: creating Record in memory with DOI and parameterized Datastore Object Type (DOT)
Database -> Database: set Parent to parameterized Parent Node ID
@enduml

@startuml
Title: Datastore: Process Record Modification Event Delete
note over Database
	note that this sequence is recurive
end note
loop for each Child Node
	Database -> Database: delete Child Node
end
Database -> Database: delete Node (non-recursive)
alt if Parent has no Child Node
	Database -> Database: delete Parent Node
end
@enduml

@startuml
Title: Datastore: Process Record Modification Event Move

Database -> Database: remove Child Node from old Parent
Database -> Database: add Child Node to new Parent
@enduml

@startuml
Title: Datastore: Process Record Modification Event Rename
Database -> Database: set Node key to new name
@enduml

@startuml
Title: Datastore: Process Record Modification Event Set Data
Database -> Database: set Node Data to new data
@enduml