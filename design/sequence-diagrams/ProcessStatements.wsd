@startuml
'Connect to Database Server'

Caller -> DatabaseContext :create(address)
DatabaseContext -> Network : connect(address) 
Network -> RemoteServer : initaite protocol
RemoteServer --> Network : return
Network --> DatabaseContext : return
DatabaseContext --> Caller : return

@enduml

@startuml
'CLI Process Statement'

Caller -> Caller : create transaction
Caller -> Caller : create statement
Caller -> Transaction : add(statement)
Transaction -> DatabaseContext : send(self)
DatabaseContext -> Network : send(transaction)
Network->Network:serialize(transaction)
Network->System:send(data)
System --> Network : response
Network --> DatabaseContext : response
DatabaseContext --> Transaction : response
Transaction --> Caller : response

@enduml

@startuml
'Library Process Transaction'

DatabaseContext -> Network : sends the Transaction to Network class
Network -> Server : send data
Network --> DatabaseContext : return

@enduml

@startuml
'Backend Process Statement'

ClientConnection -> DatabaseController : create(transaction)
DatabaseController -> DatabaseController :parse statements in transaction
DatabaseController -> DatabaseController : generate Database Record Modification Events (DRMEs)
DatabaseController -> DataController : send(DRMEs)
DataController -> Journal : log(DRMEs)
DataController -> Datastore : log(DRMEs)
Datastore -> Disk : apply()
Datastore -> DataController : return status
Journal -> DataController : return status
DataController -> DatabaseController : return status
DatabaseController -> ClientConnection : return status

@enduml